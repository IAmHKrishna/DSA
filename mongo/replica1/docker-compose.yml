version: "3.8"

services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo1-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  mongo2:
    image: mongo:latest
    container_name: mongo2
    ports:
      - "27018:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo2-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  mongo3:
    image: mongo:latest
    container_name: mongo3
    ports:
      - "27019:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo3-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  app:
    image: node:20
    container_name: my-node-app
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: "node app.js"
    environment:
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27018,mongo3:27019/mydb?replicaSet=rs0
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
